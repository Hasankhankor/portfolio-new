{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\XoooXz\\\\Documents\\\\github\\\\onyedika\\\\src\\\\components\\\\preloader.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { gsap } from 'gsap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LinearProgressWithLabel(props) {\n  _s();\n\n  const el = useRef();\n  const tl = useRef();\n  const q = gsap.utils.selector(el);\n  useEffect(() => {\n    tl.current = gsap.timeline().to(q('.square'), {\n      opacity: 0.7\n    }).to(q('.square'), {\n      duration: 1.5,\n      ease: 'powerInOut',\n      opacity: 1,\n      repeat: -1,\n      yoyo: true\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preload\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"\",\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LinearProgressWithLabel, \"Hp44jWNMtNFDanHehEJW2FQ3FDg=\");\n\n_c = LinearProgressWithLabel;\nLinearProgressWithLabel.propTypes = {\n  value: PropTypes.number.isRequired\n};\nexport default function LinearWithValueLabel() {\n  _s2();\n\n  const [progress, setProgress] = useState(10);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(prevProgress => prevProgress >= 100 ? 10 : prevProgress + 10);\n    }, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"anime\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"load\",\n        dangerouslySetInnerHTML: {\n          __html: `\n          <svg height=\"100%\" fill=\"none\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" xmlns=\"http://www.w3.org/2000/svg\" xmlSpace=\"preserve\" width=\"100%\" version=\"1.1\" viewBox=\"0 0 857 151\" id=\"lo\">\n            <text x=\"50%\" y=\"50%\" text-anchor=\"middle\" stroke=\"#10e956\" stroke-width=\"1px\" dy=\".3em\">Hassan</text>\n          </svg>\n        `\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(LinearWithValueLabel, \"FXkwgvVY0uqjEY9M9pBwGohlXgA=\");\n\n_c2 = LinearWithValueLabel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LinearProgressWithLabel\");\n$RefreshReg$(_c2, \"LinearWithValueLabel\");","map":{"version":3,"sources":["C:/Users/XoooXz/Documents/github/onyedika/src/components/preloader.js"],"names":["React","useEffect","useState","useRef","PropTypes","LinearProgress","Typography","Box","gsap","LinearProgressWithLabel","props","el","tl","q","utils","selector","current","timeline","to","opacity","duration","ease","repeat","yoyo","Math","round","value","propTypes","number","isRequired","LinearWithValueLabel","progress","setProgress","timer","setInterval","prevProgress","clearInterval","__html"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,IAAT,QAAqB,MAArB;;;AAEA,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AAAA;;AACtC,QAAMC,EAAE,GAAGR,MAAM,EAAjB;AACA,QAAMS,EAAE,GAAGT,MAAM,EAAjB;AACA,QAAMU,CAAC,GAAGL,IAAI,CAACM,KAAL,CAAWC,QAAX,CAAoBJ,EAApB,CAAV;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,EAAE,CAACI,OAAH,GAAaR,IAAI,CAACS,QAAL,GACVC,EADU,CACPL,CAAC,CAAC,SAAD,CADM,EACO;AAAEM,MAAAA,OAAO,EAAE;AAAX,KADP,EAEVD,EAFU,CAEPL,CAAC,CAAC,SAAD,CAFM,EAEO;AAChBO,MAAAA,QAAQ,EAAE,GADM;AAEhBC,MAAAA,IAAI,EAAE,YAFU;AAGhBF,MAAAA,OAAO,EAAE,CAHO;AAIhBG,MAAAA,MAAM,EAAE,CAAC,CAJO;AAKhBC,MAAAA,IAAI,EAAE;AALU,KAFP,CAAb;AASD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAC,aAAxB;AAAA,WAA0Cb;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAA4B,QAAA,KAAK,EAAC,EAAlC;AAAA,kBACI,GAAEc,IAAI,CAACC,KAAL,CAAWf,KAAK,CAACgB,KAAjB,CAAwB;AAD9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA7BQjB,uB;;KAAAA,uB;AA+BTA,uBAAuB,CAACkB,SAAxB,GAAoC;AAClCD,EAAAA,KAAK,EAAEtB,SAAS,CAACwB,MAAV,CAAiBC;AADU,CAApC;AAIA,eAAe,SAASC,oBAAT,GAAgC;AAAA;;AAC7C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgC,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9BF,MAAAA,WAAW,CAAEG,YAAD,IAAmBA,YAAY,IAAI,GAAhB,GAAsB,EAAtB,GAA2BA,YAAY,GAAG,EAA9D,CAAX;AACD,KAFwB,EAEtB,GAFsB,CAAzB;AAGA,WAAO,MAAM;AACXC,MAAAA,aAAa,CAACH,KAAD,CAAb;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE,QAAC,GAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,uBAAuB,EAAE;AAAEI,UAAAA,MAAM,EAAG;AAClE;AACA;AACA;AACA;AAJuD;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;IAxBuBP,oB;;MAAAA,oB","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport { gsap } from 'gsap';\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  const el = useRef();\r\n  const tl = useRef();\r\n  const q = gsap.utils.selector(el);\r\n\r\n  useEffect(() => {\r\n    tl.current = gsap.timeline()\r\n      .to(q('.square'), { opacity: 0.7 })\r\n      .to(q('.square'), {\r\n        duration: 1.5,\r\n        ease: 'powerInOut',\r\n        opacity: 1,\r\n        repeat: -1,\r\n        yoyo: true,\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"preload\">\r\n      <div className=\"loader\">\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </div>\r\n      <div className=\"progress\">\r\n        <Typography variant=\"body2\" color=\"\">\r\n          {`${Math.round(props.value)}%`}\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nLinearProgressWithLabel.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function LinearWithValueLabel() {\r\n  const [progress, setProgress] = useState(10);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 10));\r\n    }, 500);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <div className=\"anime\">\r\n        <div className=\"load\" dangerouslySetInnerHTML={{ __html: `\r\n          <svg height=\"100%\" fill=\"none\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" xmlns=\"http://www.w3.org/2000/svg\" xmlSpace=\"preserve\" width=\"100%\" version=\"1.1\" viewBox=\"0 0 857 151\" id=\"lo\">\r\n            <text x=\"50%\" y=\"50%\" text-anchor=\"middle\" stroke=\"#10e956\" stroke-width=\"1px\" dy=\".3em\">Hassan</text>\r\n          </svg>\r\n        ` }} />\r\n        {/* <LinearProgressWithLabel value={progress} /> */}\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}